/* tslint:disable */
/* eslint-disable */
/**
 * machina
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserProfile } from './UserProfile';
import {
    UserProfileFromJSON,
    UserProfileFromJSONTyped,
    UserProfileToJSON,
    UserProfileToJSONTyped,
} from './UserProfile';
import type { CurrentlyPlaying } from './CurrentlyPlaying';
import {
    CurrentlyPlayingFromJSON,
    CurrentlyPlayingFromJSONTyped,
    CurrentlyPlayingToJSON,
    CurrentlyPlayingToJSONTyped,
} from './CurrentlyPlaying';
import type { TotalListenStats } from './TotalListenStats';
import {
    TotalListenStatsFromJSON,
    TotalListenStatsFromJSONTyped,
    TotalListenStatsToJSON,
    TotalListenStatsToJSONTyped,
} from './TotalListenStats';
import type { TopTrack } from './TopTrack';
import {
    TopTrackFromJSON,
    TopTrackFromJSONTyped,
    TopTrackToJSON,
    TopTrackToJSONTyped,
} from './TopTrack';

/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {CurrentlyPlaying}
     * @memberof Profile
     */
    currentPlaying: CurrentlyPlaying;
    /**
     * 
     * @type {TotalListenStats}
     * @memberof Profile
     */
    listenStats: TotalListenStats;
    /**
     * 
     * @type {Array<TopTrack>}
     * @memberof Profile
     */
    topTracks: Array<TopTrack>;
    /**
     * 
     * @type {UserProfile}
     * @memberof Profile
     */
    user: UserProfile;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    if (!('currentPlaying' in value) || value['currentPlaying'] === undefined) return false;
    if (!('listenStats' in value) || value['listenStats'] === undefined) return false;
    if (!('topTracks' in value) || value['topTracks'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'currentPlaying': CurrentlyPlayingFromJSON(json['current_playing']),
        'listenStats': TotalListenStatsFromJSON(json['listen_stats']),
        'topTracks': ((json['top_tracks'] as Array<any>).map(TopTrackFromJSON)),
        'user': UserProfileFromJSON(json['user']),
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Profile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'current_playing': CurrentlyPlayingToJSON(value['currentPlaying']),
        'listen_stats': TotalListenStatsToJSON(value['listenStats']),
        'top_tracks': ((value['topTracks'] as Array<any>).map(TopTrackToJSON)),
        'user': UserProfileToJSON(value['user']),
    };
}


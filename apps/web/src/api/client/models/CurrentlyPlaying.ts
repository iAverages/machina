/* tslint:disable */
/* eslint-disable */
/**
 * machina
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PlayingTrack } from './PlayingTrack';
import {
    PlayingTrackFromJSON,
    PlayingTrackFromJSONTyped,
    PlayingTrackToJSON,
    PlayingTrackToJSONTyped,
} from './PlayingTrack';

/**
 * 
 * @export
 * @interface CurrentlyPlaying
 */
export interface CurrentlyPlaying {
    /**
     * 
     * @type {boolean}
     * @memberof CurrentlyPlaying
     */
    isPlaying: boolean;
    /**
     * 
     * @type {number}
     * @memberof CurrentlyPlaying
     */
    progress: number;
    /**
     * 
     * @type {PlayingTrack}
     * @memberof CurrentlyPlaying
     */
    track?: PlayingTrack | null;
}

/**
 * Check if a given object implements the CurrentlyPlaying interface.
 */
export function instanceOfCurrentlyPlaying(value: object): value is CurrentlyPlaying {
    if (!('isPlaying' in value) || value['isPlaying'] === undefined) return false;
    if (!('progress' in value) || value['progress'] === undefined) return false;
    return true;
}

export function CurrentlyPlayingFromJSON(json: any): CurrentlyPlaying {
    return CurrentlyPlayingFromJSONTyped(json, false);
}

export function CurrentlyPlayingFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentlyPlaying {
    if (json == null) {
        return json;
    }
    return {
        
        'isPlaying': json['is_playing'],
        'progress': json['progress'],
        'track': json['track'] == null ? undefined : PlayingTrackFromJSON(json['track']),
    };
}

export function CurrentlyPlayingToJSON(json: any): CurrentlyPlaying {
    return CurrentlyPlayingToJSONTyped(json, false);
}

export function CurrentlyPlayingToJSONTyped(value?: CurrentlyPlaying | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'is_playing': value['isPlaying'],
        'progress': value['progress'],
        'track': PlayingTrackToJSON(value['track']),
    };
}


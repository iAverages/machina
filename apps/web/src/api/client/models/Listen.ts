/* tslint:disable */
/* eslint-disable */
/**
 * machina
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Listen
 */
export interface Listen {
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    albumId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    albumName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    artistId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    artistName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    coverArt?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Listen
     */
    duration?: number | null;
    /**
     * 
     * @type {number}
     * @memberof Listen
     */
    explicit?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Listen
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Listen
     */
    time: number;
}

/**
 * Check if a given object implements the Listen interface.
 */
export function instanceOfListen(value: object): value is Listen {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('time' in value) || value['time'] === undefined) return false;
    return true;
}

export function ListenFromJSON(json: any): Listen {
    return ListenFromJSONTyped(json, false);
}

export function ListenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Listen {
    if (json == null) {
        return json;
    }
    return {
        
        'albumId': json['album_id'] == null ? undefined : json['album_id'],
        'albumName': json['album_name'] == null ? undefined : json['album_name'],
        'artistId': json['artist_id'] == null ? undefined : json['artist_id'],
        'artistName': json['artist_name'] == null ? undefined : json['artist_name'],
        'coverArt': json['cover_art'] == null ? undefined : json['cover_art'],
        'duration': json['duration'] == null ? undefined : json['duration'],
        'explicit': json['explicit'] == null ? undefined : json['explicit'],
        'id': json['id'],
        'name': json['name'],
        'time': json['time'],
    };
}

export function ListenToJSON(json: any): Listen {
    return ListenToJSONTyped(json, false);
}

export function ListenToJSONTyped(value?: Listen | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'album_id': value['albumId'],
        'album_name': value['albumName'],
        'artist_id': value['artistId'],
        'artist_name': value['artistName'],
        'cover_art': value['coverArt'],
        'duration': value['duration'],
        'explicit': value['explicit'],
        'id': value['id'],
        'name': value['name'],
        'time': value['time'],
    };
}


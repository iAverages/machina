/*
 * Better Auth
 *
 * API Reference for your Better Auth Instance
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ForgetPasswordPostRequest {
    /// The email address of the user to send a password reset email to
    #[serde(rename = "email")]
    pub email: String,
    /// The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN
    #[serde(rename = "redirectTo", skip_serializing_if = "Option::is_none")]
    pub redirect_to: Option<String>,
}

impl ForgetPasswordPostRequest {
    pub fn new(email: String) -> ForgetPasswordPostRequest {
        ForgetPasswordPostRequest {
            email,
            redirect_to: None,
        }
    }
}

